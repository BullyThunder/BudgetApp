{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rusla\\\\React_project\\\\budget\\\\client\\\\src\\\\components\\\\income.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../assets/css/style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Income = ({\n  SetSum1\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [arrCategory, setArrCategory] = useState(() => {\n    try {\n      const saveCategory_income = localStorage.getItem(\"saveCategory_income\");\n      const parsed = saveCategory_income ? JSON.parse(saveCategory_income) : [];\n      return Array.isArray(parsed) ? parsed : [];\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      return [];\n    }\n  });\n  const [incomeInput, setIncomeInput] = useState(() => {\n    try {\n      const saveIncomeInput = localStorage.getItem(\"saveIncomeInput\");\n      return saveIncomeInput ? JSON.parse(saveIncomeInput) : [];\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      return [];\n    }\n  });\n  const [totalInput, setTotalInput] = useState(() => {\n    try {\n      const saveTotalInput = localStorage.getItem(\"saveTotalInput\");\n      return saveTotalInput ? JSON.parse(saveTotalInput) : [];\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      return [];\n    }\n  });\n  const [allTotalSumm, setAllTotalSumm] = useState(() => {\n    try {\n      const saveTotalSummary = localStorage.getItem(\"saveTotalSummary\");\n      return saveTotalSummary ? JSON.parse(saveTotalSummary) : [];\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      return [];\n    }\n  });\n\n  // Очищает поле ввода\n  const clearList = () => {\n    setInputValue('');\n  };\n\n  // Очищает значение для конкретной категории\n  const clearCategory = id => {\n    setIncomeInput(prev => ({\n      ...prev,\n      [id]: \"\"\n    }));\n  };\n\n  // Удаляет категорию\n  const deleteList = id => {\n    let deletingList = arrCategory.filter(item => item.id !== id);\n    setArrCategory(deletingList);\n    saveToLocalStorage_Category(deletingList);\n  };\n\n  // Обработчик ввода для создания категории\n  const displayInput = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Обновляем значение для категории\n  const displayIncome = (id, value) => {\n    setIncomeInput(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n\n  // Добавляем новую категорию\n  const addCategory = () => {\n    if (inputValue.trim()) {\n      const updatedArrCategory = [...arrCategory, {\n        value: inputValue,\n        id: Date.now(),\n        total: 0\n      }];\n      setArrCategory(updatedArrCategory);\n      setInputValue('');\n      saveToLocalStorage_Category(updatedArrCategory);\n    }\n  };\n\n  // Добавляем доход в totalInput\n  const addToTotal = id => {\n    setTotalInput(prev => {\n      const updatedTotal = {\n        ...prev,\n        [id]: (prev[id] || 0) + parseFloat(incomeInput[id] || 0)\n      };\n      saveToLocalStorage_Total(updatedTotal);\n      return updatedTotal;\n    });\n\n    // Сбрасываем поле ввода для категории\n    setIncomeInput(prev => ({\n      ...prev,\n      [id]: \"\"\n    }));\n  };\n\n  // Обновляем totalInput\n  const displayTotal = id => {\n    setTotalInput(prev => {\n      const updatedTotal_value = {\n        ...prev,\n        [id]: (prev[id] || 0) + parseFloat(totalInput[id] || 0)\n      };\n      saveToLocalStorage_Total(updatedTotal_value);\n      return updatedTotal_value;\n    });\n  };\n\n  // Очищаем totalInput для конкретной категории\n  const clearTotal = id => {\n    setTotalInput(prev => {\n      const clear_Total = {\n        ...prev,\n        [id]: \"\"\n      };\n      saveToLocalStorage_Total(clear_Total);\n      return clear_Total;\n    });\n  };\n\n  // Рассчитываем сумму\n  useEffect(() => {\n    const totalSum = Object.values(totalInput).reduce((acc, value) => acc + value, 0);\n    setAllTotalSumm(totalSum);\n    saveToLocalStorage_Summary(totalSum);\n  }, [totalInput]);\n\n  // Передаем общую сумму родительскому компоненту\n  useEffect(() => {\n    if (typeof SetSum1 === 'function') {\n      SetSum1(allTotalSumm);\n    }\n  }, [allTotalSumm, SetSum1]);\n\n  // Обновление общей суммы\n  const total_Sum = () => {\n    let summary = Object.values(totalInput).reduce((acc, next) => acc + next, 0);\n    setAllTotalSumm(summary);\n    saveToLocalStorage_Summary(summary);\n    return summary;\n  };\n  const ResetTotal = () => {\n    setAllTotalSumm(\"\");\n  };\n  // Сохранение в localStorage\n  const saveToLocalStorage_Category = data => {\n    localStorage.setItem(\"saveCategory_income\", JSON.stringify(data));\n  };\n  const saveToLocalStorage_Total = data => {\n    localStorage.setItem(\"saveTotalInput\", JSON.stringify(data));\n  };\n  const saveToLocalStorage_Summary = data => {\n    localStorage.setItem(\"saveTotalSummary\", JSON.stringify(data));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"income income__padding income__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income__category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"income__category-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"income__category-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input is-primary\",\n            onChange: displayInput,\n            value: inputValue,\n            placeholder: \"Create a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearList,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addCategory,\n            className: \"button is-info is-light\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"income__category-list\",\n          children: arrCategory.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input is-success\",\n                type: \"number\",\n                value: incomeInput[item.id] || \"\",\n                onChange: e => displayIncome(item.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => clearCategory(item.id),\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => addToTotal(item.id),\n                className: \"income__category-btn\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteList(item.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Total for \", item.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input is-success\",\n                type: \"number\",\n                value: totalInput[item.id] || \"\",\n                onChange: e => displayTotal(item.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => clearTotal(item.id),\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => total_Sum(item.id),\n                children: \"Add to Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input is-success\",\n            value: allTotalSumm,\n            onChange: total_Sum,\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ResetTotal,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s(Income, \"yywcQYc12GTZHiTRu1JB40PWK2E=\");\n_c = Income;\nexport default Income;\nvar _c;\n$RefreshReg$(_c, \"Income\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Income","SetSum1","_s","inputValue","setInputValue","arrCategory","setArrCategory","saveCategory_income","localStorage","getItem","parsed","JSON","parse","Array","isArray","e","console","log","incomeInput","setIncomeInput","saveIncomeInput","totalInput","setTotalInput","saveTotalInput","allTotalSumm","setAllTotalSumm","saveTotalSummary","clearList","clearCategory","id","prev","deleteList","deletingList","filter","item","saveToLocalStorage_Category","displayInput","event","target","value","displayIncome","addCategory","trim","updatedArrCategory","Date","now","total","addToTotal","updatedTotal","parseFloat","saveToLocalStorage_Total","displayTotal","updatedTotal_value","clearTotal","clear_Total","totalSum","Object","values","reduce","acc","saveToLocalStorage_Summary","total_Sum","summary","next","ResetTotal","data","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","index","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/rusla/React_project/budget/client/src/components/income.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../assets/css/style.scss';\r\n\r\nconst Income = ({ SetSum1 }) => { \r\n    const [inputValue, setInputValue] = useState('');\r\n    const [arrCategory, setArrCategory] = useState(() => {\r\n        try {\r\n            const saveCategory_income = localStorage.getItem(\"saveCategory_income\");\r\n            const parsed = saveCategory_income ? JSON.parse(saveCategory_income) : [];\r\n            return Array.isArray(parsed) ? parsed : [];\r\n        } catch (e) {\r\n            console.log(`Error: ${e}`);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const [incomeInput, setIncomeInput] = useState(() => {\r\n        try {\r\n            const saveIncomeInput = localStorage.getItem(\"saveIncomeInput\");\r\n            return saveIncomeInput ? JSON.parse(saveIncomeInput) : [];\r\n        } catch (e) {\r\n            console.log(`Error: ${e}`);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const [totalInput, setTotalInput] = useState(() => {\r\n        try {\r\n            const saveTotalInput = localStorage.getItem(\"saveTotalInput\");\r\n            return saveTotalInput ? JSON.parse(saveTotalInput) : [];\r\n        } catch (e) {\r\n            console.log(`Error: ${e}`);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const [allTotalSumm, setAllTotalSumm] = useState(() => {\r\n        try {\r\n            const saveTotalSummary = localStorage.getItem(\"saveTotalSummary\");\r\n            return saveTotalSummary ? JSON.parse(saveTotalSummary) : [];\r\n        } catch (e) {\r\n            console.log(`Error: ${e}`);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    // Очищает поле ввода\r\n    const clearList = () => {\r\n        setInputValue('');\r\n    };\r\n\r\n    // Очищает значение для конкретной категории\r\n    const clearCategory = (id) => {\r\n        setIncomeInput((prev) => ({\r\n            ...prev,\r\n            [id]: \"\"\r\n        }));\r\n    };\r\n\r\n    // Удаляет категорию\r\n    const deleteList = (id) => {\r\n        let deletingList = arrCategory.filter((item) => item.id !== id);\r\n        setArrCategory(deletingList);\r\n        saveToLocalStorage_Category(deletingList);\r\n    };\r\n\r\n    // Обработчик ввода для создания категории\r\n    const displayInput = (event) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n\r\n    // Обновляем значение для категории\r\n    const displayIncome = (id, value) => {\r\n        setIncomeInput((prev) => ({\r\n            ...prev,\r\n            [id]: value\r\n        }));\r\n    };\r\n\r\n    // Добавляем новую категорию\r\n    const addCategory = () => {\r\n        if (inputValue.trim()) {\r\n            const updatedArrCategory = [...arrCategory, { value: inputValue, id: Date.now(), total: 0 }];\r\n            setArrCategory(updatedArrCategory);\r\n            setInputValue('');\r\n            saveToLocalStorage_Category(updatedArrCategory);\r\n        }\r\n    };\r\n\r\n    // Добавляем доход в totalInput\r\n    const addToTotal = (id) => {\r\n        setTotalInput((prev) => {\r\n            const updatedTotal = {\r\n                ...prev,\r\n                [id]: (prev[id] || 0) + parseFloat(incomeInput[id] || 0),\r\n            };\r\n            saveToLocalStorage_Total(updatedTotal);\r\n            return updatedTotal;\r\n        });\r\n\r\n        // Сбрасываем поле ввода для категории\r\n        setIncomeInput((prev) => ({\r\n            ...prev,\r\n            [id]: \"\",\r\n        }));\r\n    };\r\n\r\n    // Обновляем totalInput\r\n    const displayTotal = (id) => {\r\n        setTotalInput((prev) => {\r\n            const updatedTotal_value = {\r\n                ...prev,\r\n                [id]: (prev[id] || 0) + parseFloat(totalInput[id] || 0),\r\n            };\r\n            saveToLocalStorage_Total(updatedTotal_value);\r\n            return updatedTotal_value;\r\n        });\r\n    };\r\n\r\n    // Очищаем totalInput для конкретной категории\r\n    const clearTotal = (id) => {\r\n        setTotalInput((prev) => {\r\n            const clear_Total = { ...prev, [id]: \"\" };\r\n            saveToLocalStorage_Total(clear_Total);\r\n            return clear_Total;\r\n        });\r\n    };\r\n\r\n    // Рассчитываем сумму\r\n    useEffect(() => {\r\n        const totalSum = Object.values(totalInput).reduce((acc, value) => acc + value, 0);\r\n        setAllTotalSumm(totalSum);\r\n        saveToLocalStorage_Summary(totalSum);\r\n    }, [totalInput]);\r\n\r\n    // Передаем общую сумму родительскому компоненту\r\n    useEffect(() => {\r\n        if(typeof SetSum1 === 'function'){\r\n        SetSum1(allTotalSumm);\r\n        }\r\n    }, [allTotalSumm, SetSum1]);\r\n\r\n    // Обновление общей суммы\r\n    const total_Sum = () => {\r\n        let summary = Object.values(totalInput).reduce((acc, next) => acc + next, 0);\r\n        setAllTotalSumm(summary);\r\n        saveToLocalStorage_Summary(summary);\r\n        return summary;\r\n    };\r\n    const ResetTotal = () =>{\r\n        setAllTotalSumm(\"\"); \r\n    }\r\n    // Сохранение в localStorage\r\n    const saveToLocalStorage_Category = (data) => {\r\n        localStorage.setItem(\"saveCategory_income\", JSON.stringify(data));\r\n    };\r\n\r\n    const saveToLocalStorage_Total = (data) => {\r\n        localStorage.setItem(\"saveTotalInput\", JSON.stringify(data));\r\n    };\r\n\r\n    const saveToLocalStorage_Summary = (data) => {\r\n        localStorage.setItem(\"saveTotalSummary\", JSON.stringify(data));\r\n    };\r\n\r\n    return (\r\n        <div className='income income__padding income__container'>\r\n            <div className='income__category'>\r\n                <h2>Income</h2>\r\n                <h2>Select Category</h2>\r\n                <div className='income__category-block'>\r\n                    <div className='income__category-btn'>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"input is-primary\"\r\n                            onChange={displayInput}\r\n                            value={inputValue}\r\n                            placeholder='Create a category'\r\n                        />\r\n                        <button onClick={clearList}>Clear</button>\r\n                        <button\r\n                            onClick={addCategory}\r\n                            className=\"button is-info is-light\"\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    <ul className=\"income__category-list\">\r\n                        {arrCategory.map((item, index) => (\r\n                            <React.Fragment key={index}>\r\n                                <li>\r\n                                    <span>{item.value}</span>\r\n                                    <input\r\n                                        className='input is-success'\r\n                                        type=\"number\"\r\n                                        value={incomeInput[item.id] || \"\"}\r\n                                        onChange={(e) => displayIncome(item.id, e.target.value)}\r\n                                    />\r\n                                    <button onClick={() => clearCategory(item.id)}>Clear</button>\r\n                                    <button onClick={() => addToTotal(item.id)} className=\"income__category-btn\">Add</button>\r\n                                    <button onClick={() => deleteList(item.id)}>Delete</button>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Total for {item.value}</span>\r\n                                    <input\r\n                                        className='input is-success'\r\n                                        type=\"number\"\r\n                                        value={totalInput[item.id] || \"\"}\r\n                                        onChange={(e) => displayTotal(item.id, e.target.value)}\r\n                                    />\r\n                                    <button onClick={() => clearTotal(item.id)}>Clear</button>\r\n                                    <button onClick={() => total_Sum(item.id)}>Add to Total</button>\r\n                                </li>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </ul>\r\n                    <div className='total-section'>\r\n                        <span>TOTAL</span>\r\n                        <input\r\n                            className='input is-success'\r\n                            value={allTotalSumm}\r\n                            onChange={total_Sum}\r\n                            type=\"number\"\r\n                        />\r\n                        <button onClick={ResetTotal}>Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Income;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}