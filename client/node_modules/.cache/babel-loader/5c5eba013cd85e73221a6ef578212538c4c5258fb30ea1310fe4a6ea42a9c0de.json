{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rusla\\\\React_project\\\\budget\\\\client\\\\src\\\\components\\\\expenses.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../assets/css/style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = ({\n  SetSum2\n}) => {\n  _s();\n  const [categoryInput, setCategoryInput] = useState('');\n  const [categoryList, setCategoryList] = useState(() => {\n    try {\n      const savedCategories = localStorage.getItem(\"savedCategories\");\n      const parsed = savedCategories ? JSON.parse(savedCategories) : [];\n      return Array.isArray(parsed) ? parsed : [];\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      return [];\n    }\n  });\n  const [expenseRecords, setExpenseRecords] = useState(() => {\n    try {\n      const savedExpenses = localStorage.getItem(\"savedExpenses\");\n      return savedExpenses ? JSON.parse(savedExpenses) : [];\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      return [];\n    }\n  });\n  const removeCategory = id => {\n    let updatedCategories = categoryList.filter(item => item.id !== id);\n    setCategoryList(updatedCategories);\n    saveCategoriesToLocalStorage(updatedCategories);\n  };\n  const handleCategoryInput = event => {\n    setCategoryInput(event.target.value);\n  };\n  const handleExpenseInput = (id, value) => {\n    setExpenseRecords(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  const clearCategoryInput = () => {\n    setCategoryInput('');\n  };\n  const resetCategoryExpenses = id => {\n    setExpenseRecords(prev => ({\n      ...prev,\n      [id]: \"\"\n    }));\n  };\n  const addNewCategory = () => {\n    if (categoryInput.trim()) {\n      const updatedCategoryList = [...categoryList, {\n        value: categoryInput,\n        id: Date.now(),\n        total: 0\n      }];\n      setCategoryList(updatedCategoryList);\n      setCategoryInput('');\n      saveCategoriesToLocalStorage(updatedCategoryList);\n    }\n  };\n  const [totalExpenses, setTotalExpenses] = useState(() => {\n    try {\n      const savedTotals = localStorage.getItem(\"savedTotals\");\n      return savedTotals ? JSON.parse(savedTotals) : [];\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      return [];\n    }\n  });\n  const updateTotalExpenses = id => {\n    setTotalExpenses(prev => {\n      const updatedTotals = {\n        ...prev,\n        [id]: (prev[id] || 0) + parseFloat(expenseRecords[id] || 0)\n      };\n      saveTotalsToLocalStorage(updatedTotals);\n      return updatedTotals;\n    });\n    setExpenseRecords(prev => ({\n      ...prev,\n      [id]: \"\"\n    }));\n  };\n  const modifyTotalExpense = id => {\n    setTotalExpenses(prev => {\n      const adjustedTotals = {\n        ...prev,\n        [id]: (prev[id] || 0) + parseFloat(totalExpenses[id] || 0)\n      };\n      saveTotalsToLocalStorage(adjustedTotals);\n      return adjustedTotals;\n    });\n  };\n  const resetTotalExpense = id => {\n    setTotalExpenses(prev => {\n      const resetTotals = {\n        ...prev,\n        [id]: \"\"\n      };\n      saveTotalsToLocalStorage(resetTotals);\n      return resetTotals;\n    });\n  };\n  const ResetTotal = () => {\n    setGrandTotal(\"\");\n  };\n  const [grandTotal, setGrandTotal] = useState(() => {\n    try {\n      const savedGrandTotal = localStorage.getItem(\"savedGrandTotal\");\n      return savedGrandTotal ? JSON.parse(savedGrandTotal) : 0;\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      return 0;\n    }\n  });\n  useEffect(() => {\n    const computedTotal = Object.values(totalExpenses).reduce((acc, value) => acc + value, 0);\n    setGrandTotal(computedTotal);\n    saveGrandTotalToLocalStorage(computedTotal);\n  }, [totalExpenses]);\n  useEffect(() => {\n    if (typeof SetSum2 === 'function') {\n      SetSum2(grandTotal);\n    }\n  }, [grandTotal, SetSum2]);\n  const computeGrandTotal = () => {\n    let summary = Object.values(totalExpenses).reduce((acc, next) => acc + next);\n    setGrandTotal(summary);\n    saveGrandTotalToLocalStorage(summary);\n    return summary;\n  };\n  const saveCategoriesToLocalStorage = data => {\n    localStorage.setItem(\"savedCategories\", JSON.stringify(data));\n  };\n  const saveTotalsToLocalStorage = data => {\n    localStorage.setItem(\"savedTotals\", JSON.stringify(data));\n  };\n  const saveGrandTotalToLocalStorage = data => {\n    localStorage.setItem(\"savedGrandTotal\", JSON.stringify(data));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses expenses__padding expenses__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expenses__category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"income__category-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"income__category-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input is-primary\",\n            onChange: handleCategoryInput,\n            value: categoryInput,\n            placeholder: \"Create a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearCategoryInput,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewCategory,\n            className: \"button is-info is-light\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"income__category-list\",\n          children: categoryList.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input is-success\",\n                type: \"number\",\n                value: expenseRecords[item.id] || \"\",\n                onChange: e => handleExpenseInput(item.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => resetCategoryExpenses(item.id),\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateTotalExpenses(item.id),\n                className: \"category-btn\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeCategory(item.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Total for \", item.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input is-success\",\n                type: \"number\",\n                value: totalExpenses[item.id] || \"\",\n                onChange: e => modifyTotalExpense(item.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => resetTotalExpense(item.id),\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => computeGrandTotal(),\n                children: \"Add to Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"GRAND TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input is-success\",\n            value: grandTotal,\n            onChange: computeGrandTotal,\n            readOnly: true,\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ResetTotal,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"HKXCezaA3tI9x99MsK5DLtnHrQ8=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Expenses","SetSum2","_s","categoryInput","setCategoryInput","categoryList","setCategoryList","savedCategories","localStorage","getItem","parsed","JSON","parse","Array","isArray","e","console","log","expenseRecords","setExpenseRecords","savedExpenses","removeCategory","id","updatedCategories","filter","item","saveCategoriesToLocalStorage","handleCategoryInput","event","target","value","handleExpenseInput","prev","clearCategoryInput","resetCategoryExpenses","addNewCategory","trim","updatedCategoryList","Date","now","total","totalExpenses","setTotalExpenses","savedTotals","updateTotalExpenses","updatedTotals","parseFloat","saveTotalsToLocalStorage","modifyTotalExpense","adjustedTotals","resetTotalExpense","resetTotals","ResetTotal","setGrandTotal","grandTotal","savedGrandTotal","computedTotal","Object","values","reduce","acc","saveGrandTotalToLocalStorage","computeGrandTotal","summary","next","data","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","index","Fragment","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/rusla/React_project/budget/client/src/components/expenses.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../assets/css/style.scss';\r\n\r\nconst Expenses = ({SetSum2}) => {\r\n    const [categoryInput, setCategoryInput] = useState('');\r\n    const [categoryList, setCategoryList] = useState(() => {\r\n        try {\r\n            const savedCategories = localStorage.getItem(\"savedCategories\");\r\n            const parsed = savedCategories ? JSON.parse(savedCategories) : [];\r\n            return Array.isArray(parsed) ? parsed : [];\r\n        } catch (e) {\r\n            console.log(`Error: ${e}`);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const [expenseRecords, setExpenseRecords] = useState(() => {\r\n        try {\r\n            const savedExpenses = localStorage.getItem(\"savedExpenses\");\r\n            return savedExpenses ? JSON.parse(savedExpenses) : [];\r\n        } catch (e) {\r\n            console.log(`Error: ${e}`);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const removeCategory = (id) => {\r\n        let updatedCategories = categoryList.filter((item) => item.id !== id);\r\n        setCategoryList(updatedCategories);\r\n        saveCategoriesToLocalStorage(updatedCategories);\r\n    };\r\n\r\n    const handleCategoryInput = (event) => {\r\n        setCategoryInput(event.target.value);\r\n    };\r\n\r\n    const handleExpenseInput = (id, value) => {\r\n        setExpenseRecords((prev) => ({\r\n            ...prev,\r\n            [id]: value,\r\n        }));\r\n    };\r\n\r\n    const clearCategoryInput = () => {\r\n        setCategoryInput('');\r\n    };\r\n\r\n    const resetCategoryExpenses = (id) => {\r\n        setExpenseRecords((prev) => ({\r\n            ...prev,\r\n            [id]: \"\",\r\n        }));\r\n    };\r\n\r\n    const addNewCategory = () => {\r\n        if (categoryInput.trim()) {\r\n            const updatedCategoryList = [...categoryList, { value: categoryInput, id: Date.now(), total: 0 }];\r\n            setCategoryList(updatedCategoryList);\r\n            setCategoryInput('');\r\n            saveCategoriesToLocalStorage(updatedCategoryList);\r\n        }\r\n    };\r\n    const [totalExpenses, setTotalExpenses] = useState(() => {\r\n        try {\r\n            const savedTotals = localStorage.getItem(\"savedTotals\");\r\n            return savedTotals ? JSON.parse(savedTotals) : [];\r\n        } catch (e) {\r\n            console.log(`Error: ${e}`);\r\n            return [];\r\n        }\r\n    });\r\n\r\n    const updateTotalExpenses = (id) => {\r\n        setTotalExpenses((prev) => {\r\n            const updatedTotals = {\r\n                ...prev,\r\n                [id]: (prev[id] || 0) + parseFloat(expenseRecords[id] || 0),\r\n            };\r\n            saveTotalsToLocalStorage(updatedTotals);\r\n            return updatedTotals;\r\n        });\r\n\r\n        setExpenseRecords((prev) => ({\r\n            ...prev,\r\n            [id]: \"\",\r\n        }));\r\n    };\r\n\r\n    const modifyTotalExpense = (id) => {\r\n        setTotalExpenses((prev) => {\r\n            const adjustedTotals = {\r\n                ...prev,\r\n                [id]: (prev[id] || 0) + parseFloat(totalExpenses[id] || 0),\r\n            };\r\n            saveTotalsToLocalStorage(adjustedTotals);\r\n            return adjustedTotals;\r\n        });\r\n    };\r\n\r\n    const resetTotalExpense = (id) => {\r\n        setTotalExpenses((prev) => {\r\n            const resetTotals = { ...prev, [id]: \"\" };\r\n            saveTotalsToLocalStorage(resetTotals);\r\n            return resetTotals;\r\n        });\r\n    };\r\n    const ResetTotal = () =>{\r\n        setGrandTotal(\"\"); \r\n    }\r\n    const [grandTotal, setGrandTotal] = useState(() => {\r\n        try {\r\n            const savedGrandTotal = localStorage.getItem(\"savedGrandTotal\");\r\n            return savedGrandTotal ? JSON.parse(savedGrandTotal) : 0;\r\n        } catch (e) {\r\n            console.log(`Error: ${e}`);\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const computedTotal = Object.values(totalExpenses).reduce((acc, value) => acc + value, 0);\r\n        setGrandTotal(computedTotal);\r\n        saveGrandTotalToLocalStorage(computedTotal);\r\n    }, [totalExpenses]);\r\n\r\n    useEffect(() =>{\r\n        if(typeof SetSum2 === 'function'){\r\n        SetSum2(grandTotal);\r\n        }\r\n    },[grandTotal,SetSum2])\r\n    const computeGrandTotal = () => {\r\n        let summary = Object.values(totalExpenses).reduce((acc, next) => acc + next);\r\n        setGrandTotal(summary);\r\n        saveGrandTotalToLocalStorage(summary);\r\n        return summary;\r\n    };\r\n\r\n    const saveCategoriesToLocalStorage = (data) => {\r\n        localStorage.setItem(\"savedCategories\", JSON.stringify(data));\r\n    };\r\n\r\n    const saveTotalsToLocalStorage = (data) => {\r\n        localStorage.setItem(\"savedTotals\", JSON.stringify(data));\r\n    };\r\n\r\n    const saveGrandTotalToLocalStorage = (data) => {\r\n        localStorage.setItem(\"savedGrandTotal\", JSON.stringify(data));\r\n    };\r\n    return (\r\n        <div className='expenses expenses__padding expenses__container'>\r\n            <div className='expenses__category'>\r\n                <h2>Expenses</h2>\r\n                <h2>Select Category</h2>\r\n                <div className='income__category-block'>\r\n                <div className='income__category-btn'>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input is-primary\"\r\n                        onChange={handleCategoryInput}\r\n                        value={categoryInput}\r\n                        placeholder='Create a category'\r\n                    />\r\n                    <button onClick={clearCategoryInput}>Clear</button>\r\n                    <button onClick={addNewCategory} className=\"button is-info is-light\">Submit</button>\r\n                    </div>\r\n                <ul className=\"income__category-list\">\r\n                    {categoryList.map((item, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <li>\r\n                                <span>{item.value}</span>\r\n                                <input\r\n                                    className='input is-success'\r\n                                    type=\"number\"\r\n                                    value={expenseRecords[item.id] || \"\"}\r\n                                    onChange={(e) => handleExpenseInput(item.id, e.target.value)}\r\n                                />\r\n                                <button onClick={() => resetCategoryExpenses(item.id)}>Clear</button>\r\n                                <button onClick={() => updateTotalExpenses(item.id)} className=\"category-btn\">Add</button>\r\n                                <button onClick={() => removeCategory(item.id)}>Delete</button>\r\n                            </li>\r\n                            <li>\r\n                                <span>Total for {item.value}</span>\r\n                                <input\r\n                                    className='input is-success'\r\n                                    type=\"number\"\r\n                                    value={totalExpenses[item.id] || \"\"}\r\n                                    onChange={(e) => modifyTotalExpense(item.id, e.target.value)}\r\n                                />\r\n                                <button onClick={() => resetTotalExpense(item.id)}>Clear</button>\r\n                                <button onClick={() => computeGrandTotal()}>Add to Total</button>\r\n                            </li>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </ul>\r\n                \r\n                <div className='total-section'>\r\n                    <span>GRAND TOTAL</span>\r\n                    <input className='input is-success' \r\n                        value={grandTotal} \r\n                        onChange={computeGrandTotal}\r\n                        readOnly type=\"number\" \r\n                       />\r\n                        <button onClick={ResetTotal}>Reset</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}